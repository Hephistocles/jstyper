#TODOS

Test 21
aliased mutation not handled - e.g.  `var y = {}; x=y; y.foo=0;` x should have a foo property at the end but doesn't
Loops
Prototypes


# Questions for Kathy

Mutation: In the example code:
	
	var x = {};
	x.foo = 3;
	
Do both occurences of 'x' have the same type (viz {foo:number})? Like the 'real' type of x is {foo:number}, and on line 1 it is given an incomplete initialisation. This is easy but not type-safe (reading x.foo before foo is initialised would give 'number' in our system, but in reality the type is 'undefined'). 

Conclusion, clearly they should have different types. How?..

Polymorphism (I have none?) See test 20.



Thoughts 

Next two stolen from http://gideon.smdng.nl/wp-content/uploads/thesis.pdf

Formal semantics are often defined separately from the actual implementation.
Whether or not a compiler or interpreter actually adheres to the defined
semantics is unclear and difficult to judge. Very few compilers or
interpreters have been proven correct with respect to the semantics.

â€¢ It has been argued that formal semantics might inhibit evolution of a
language; the maintenance costs of formal semantics could discourage
experimentation and extension
